@model SD340Labs.Models.PhoneNumberCheckViewModel

@{
    ViewData["Title"] = "Check";
}

<h1>Check</h1>

<a asp-controller="PhoneController" asp-action="Check">Check phone numbers</a>

<h4>PhoneNumberCheckViewModel</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Check">
            <div asp-validation-summary="All" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="CountryCodeSelected" class="control-label"></label>
                <input asp-for="CountryCodeSelected" class="form-control" />
                <span class="text-danger field-validation-valid" data-valmsg-for="CountryCodeSelected" data-valmsg-replace="true"></span>
            </div>
            <div class="form-group">
                <label class="control-label" for="PhoneNumberRaw">Number to Check</label>
                <input class="form-control" type="text" data-val="true" data-val-required="The Number to Check field is required." id="PhoneNumberRaw" name="PhoneNumberRaw" value="" />
                <span class="text-danger field-validation-valid" data-valmsg-for="PhoneNumberRaw" data-valmsg-replace="true"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Valid" /> @Html.DisplayNameFor(model => model.Valid)
                </label>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="HasExtension" /> @Html.DisplayNameFor(model => model.HasExtension)
                </label>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
